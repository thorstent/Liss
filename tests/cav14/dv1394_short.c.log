Running actions
Building sequential automaton
49 rounds; seen states: 45; transitions: 88
Checking if the trace is actually a counter example
10 rounds; seen states: 10; transitions: 9
Not Included
0-lo(sem)[dv1394_short.c:10]
0-w(vm_consistent)[dv1394_short.c:11]
1-lo(mtx)[dv1394_short.c:27]
1-r(state)[dv1394_short.c:28]
1-w(state)[dv1394_short.c:29]
1-un(mtx)[dv1394_short.c:30]
0-lo(mtx)[dv1394_short.c:13]
0-w(state)[dv1394_short.c:14]
0-w(state)[dv1394_short.c:15]
0-w(state)[dv1394_short.c:16]
1-w(state)[dv1394_short.c:38]
0-w(state)[dv1394_short.c:17]
0-un(mtx)[dv1394_short.c:18]
0-w(vm_consistent)[dv1394_short.c:20]
0-un(sem)[dv1394_short.c:21]
Find all sequential traces
Find concurrent traces that are not sequential
All bad traces: 
(*) 1-w(state)[dv1394_short.c:29] < 0-w(state)[dv1394_short.c:14] /\ 0-w(state)[dv1394_short.c:15] < 1-w(state)[dv1394_short.c:38] \/
0-w(state)[dv1394_short.c:14] < 1-w(state)[dv1394_short.c:38] /\ 1-w(state)[dv1394_short.c:38] < 0-w(state)[dv1394_short.c:15]
Found constraints to eliminate bad traces
Locks inferred: 
l1 (1-w(state)[dv1394_short.c:29]-1-w(state)[dv1394_short.c:38], 0-w(state)[dv1394_short.c:14]-0-w(state)[dv1394_short.c:15]) /\ 
l2 (1-w(state)[dv1394_short.c:38]-1-w(state)[dv1394_short.c:38], 0-w(state)[dv1394_short.c:14]-0-w(state)[dv1394_short.c:15])
1-w(state)[dv1394_short.c:29]
1-un(mtx)[dv1394_short.c:30]
1-w(state)[dv1394_short.c:38]
-------------------
0-w(state)[dv1394_short.c:14]
0-w(state)[dv1394_short.c:15]
-------------------


TIME - Iteration 1: 0.042s

76 rounds; seen states: 68; transitions: 136
Checking if the trace is actually a counter example
10 rounds; seen states: 10; transitions: 9
Not Included
1-lo(mtx)[dv1394_short.c:27]
1-r(state)[dv1394_short.c:28]
1-w(state)[dv1394_short.c:29]
1-un(mtx)[dv1394_short.c:30]
1-lo(sem)[dv1394_short.c:34]
1-un(sem)[dv1394_short.c:35]
0-lo(sem)[dv1394_short.c:10]
0-w(vm_consistent)[dv1394_short.c:11]
0-lo(mtx)[dv1394_short.c:13]
0-w(state)[dv1394_short.c:14]
0-w(state)[dv1394_short.c:15]
0-w(state)[dv1394_short.c:16]
1-w(state)[dv1394_short.c:38]
0-w(state)[dv1394_short.c:17]
0-un(mtx)[dv1394_short.c:18]
0-w(vm_consistent)[dv1394_short.c:20]
0-un(sem)[dv1394_short.c:21]
Find all sequential traces
Find concurrent traces that are not sequential
All bad traces: 
(*) 0-w(state)[dv1394_short.c:16] < 1-w(state)[dv1394_short.c:38] /\ 1-w(state)[dv1394_short.c:38] < 0-w(state)[dv1394_short.c:17] \/
0-w(state)[dv1394_short.c:14] < 1-w(state)[dv1394_short.c:38] /\ 1-w(state)[dv1394_short.c:38] < 0-w(state)[dv1394_short.c:16]
Found constraints to eliminate bad traces
Locks inferred: 
l3 (1-w(state)[dv1394_short.c:38]-1-w(state)[dv1394_short.c:38], 0-w(state)[dv1394_short.c:16]-0-w(state)[dv1394_short.c:17]) /\ 
l4 (1-w(state)[dv1394_short.c:38]-1-w(state)[dv1394_short.c:38], 0-w(state)[dv1394_short.c:14]-0-w(state)[dv1394_short.c:16])
1-w(state)[dv1394_short.c:38]
-------------------
0-w(state)[dv1394_short.c:16]
0-w(state)[dv1394_short.c:17]
-------------------
 /\ 
1-w(state)[dv1394_short.c:38]
-------------------
0-w(state)[dv1394_short.c:14]
0-w(state)[dv1394_short.c:15]
0-w(state)[dv1394_short.c:16]
-------------------


TIME - Iteration 2: 0.042s

75 rounds; seen states: 70; transitions: 136
Included
Synthesis was successful.
Threads: 2
Iterations: 2
Liss: 0s
Verification: 0s
Synthesis: 0.082s
Memory: 33MB
Total number of conflicts found: 3
2 | 2 | 1 | 0s | 0.082s | 0s | 0.082s | 33MB
Lock statistics:
---------------
Starting lock placement for absmin
Cost function 2: Absolute minimum of instructions inside a lock:
Number of locks used: 1
Number of lock operations: 3
Number of unlock operations: 3
Number of abstract instructions inside a lock: 7
Time for this cost function: 0.016s

Starting lock placement for small
Cost function 3: Smallest locks:
Number of locks used: 2
Number of lock operations: 5
Number of unlock operations: 5
Number of abstract instructions inside a lock: 7
Time for this cost function: 0.019s

Starting lock placement for coarse
Cost function 4: Coarse locks:
Number of locks used: 1
Number of lock operations: 3
Number of unlock operations: 3
Number of abstract instructions inside a lock: 7
Time for this cost function: 0.033s

